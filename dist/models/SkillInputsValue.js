"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * Autotab API v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.instanceOfSkillInputsValue = instanceOfSkillInputsValue;
exports.SkillInputsValueFromJSON = SkillInputsValueFromJSON;
exports.SkillInputsValueFromJSONTyped = SkillInputsValueFromJSONTyped;
exports.SkillInputsValueToJSON = SkillInputsValueToJSON;
exports.SkillInputsValueToJSONTyped = SkillInputsValueToJSONTyped;
const VariableType_1 = require("./VariableType");
const VariableDataType_1 = require("./VariableDataType");
/**
 * Check if a given object implements the SkillInputsValue interface.
 */
function instanceOfSkillInputsValue(value) {
    if (!('variableTypes' in value) || value['variableTypes'] === undefined)
        return false;
    return true;
}
function SkillInputsValueFromJSON(json) {
    return SkillInputsValueFromJSONTyped(json, false);
}
function SkillInputsValueFromJSONTyped(json, ignoreDiscriminator) {
    if (json == null) {
        return json;
    }
    return {
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : (0, VariableDataType_1.VariableDataTypeFromJSON)(json['type']),
        'variableTypes': (json['variableTypes'].map(VariableType_1.VariableTypeFromJSON)),
        'defaultValue': json['defaultValue'] == null ? undefined : json['defaultValue'],
    };
}
function SkillInputsValueToJSON(json) {
    return SkillInputsValueToJSONTyped(json, false);
}
function SkillInputsValueToJSONTyped(value, ignoreDiscriminator = false) {
    if (value == null) {
        return value;
    }
    return {
        'id': value['id'],
        'type': (0, VariableDataType_1.VariableDataTypeToJSON)(value['type']),
        'variableTypes': (value['variableTypes'].map(VariableType_1.VariableTypeToJSON)),
        'defaultValue': value['defaultValue'],
    };
}
