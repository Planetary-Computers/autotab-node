/* tslint:disable */
/* eslint-disable */
/**
 * Autotab API
 * AI that does your repetitive work end to end, with superhuman reliability.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HTTPValidationError,
  Skill,
} from '../models/index';
import {
    HTTPValidationErrorFromJSON,
    HTTPValidationErrorToJSON,
    SkillFromJSON,
    SkillToJSON,
} from '../models/index';

export interface Retrieve0Request {
    id: string;
}

/**
 * 
 */
export class SkillApi extends runtime.BaseAPI {

    /**
     * List Skills
     */
    async listRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<Skill>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${await this.configuration.apiKey("")}`;
        }
        const response = await this.request({
            path: `/skill/list`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(SkillFromJSON));
    }

    /**
     * List Skills
     */
    async list(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<Skill>> {
        const response = await this.listRaw(initOverrides);
        return await response.value();
    }

    /**
     * Get Skill
     */
    async retrieveRaw(requestParameters: Retrieve0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Skill>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling retrieve().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.apiKey) {
            headerParameters["Authorization"] = `Bearer ${await this.configuration.apiKey("")}`;
        }
        const response = await this.request({
            path: `/skill/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SkillFromJSON(jsonValue));
    }

    /**
     * Get Skill
     */
    async retrieve(requestParameters: Retrieve0Request, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Skill> {
        const response = await this.retrieveRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
