/* tslint:disable */
/* eslint-disable */
/**
 * Autotab API
 * AI that does your repetitive work end to end, with superhuman reliability.
 *
 * The version of the OpenAPI document: 0.0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Input } from './Input';
import {
    InputFromJSON,
    InputFromJSONTyped,
    InputToJSON,
    InputToJSONTyped,
} from './Input';

/**
 * 
 * @export
 * @interface Skill
 */
export interface Skill {
    /**
     * 
     * @type {string}
     * @memberof Skill
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof Skill
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Skill
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof Skill
     */
    owner: string;
    /**
     * 
     * @type {Date}
     * @memberof Skill
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof Skill
     */
    lastModifiedAt: Date | null;
    /**
     * 
     * @type {Array<Input>}
     * @memberof Skill
     */
    inputs?: Array<Input>;
}

/**
 * Check if a given object implements the Skill interface.
 */
export function instanceOfSkill(value: object): value is Skill {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('owner' in value) || value['owner'] === undefined) return false;
    if (!('createdAt' in value) || value['createdAt'] === undefined) return false;
    if (!('lastModifiedAt' in value) || value['lastModifiedAt'] === undefined) return false;
    return true;
}

export function SkillFromJSON(json: any): Skill {
    return SkillFromJSONTyped(json, false);
}

export function SkillFromJSONTyped(json: any, ignoreDiscriminator: boolean): Skill {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'owner': json['owner'],
        'createdAt': (new Date(json['created_at'])),
        'lastModifiedAt': (json['last_modified_at'] == null ? null : new Date(json['last_modified_at'])),
        'inputs': json['inputs'] == null ? undefined : ((json['inputs'] as Array<any>).map(InputFromJSON)),
    };
}

  export function SkillToJSON(json: any): Skill {
      return SkillToJSONTyped(json, false);
  }

  export function SkillToJSONTyped(value?: Skill | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'description': value['description'],
        'owner': value['owner'],
        'created_at': ((value['createdAt']).toISOString()),
        'last_modified_at': (value['lastModifiedAt'] == null ? null : (value['lastModifiedAt'] as any).toISOString()),
        'inputs': value['inputs'] == null ? undefined : ((value['inputs'] as Array<any>).map(InputToJSON)),
    };
}

